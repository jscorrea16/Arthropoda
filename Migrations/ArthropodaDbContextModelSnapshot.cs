// <auto-generated />
using ArthrpodaASP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Arthropoda.Migrations
{
    [DbContext(typeof(ArthropodaDbContext))]
    partial class ArthropodaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21");

            modelBuilder.Entity("ArthrpodaASP.Models.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfraOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("FamilyId");

                    b.HasIndex("InfraOrderId");

                    b.ToTable("Familys");
                });

            modelBuilder.Entity("ArthrpodaASP.Models.Familyinsect", b =>
                {
                    b.Property<int>("FamilyinsectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FamilyinsectId");

                    b.HasIndex("OrderId");

                    b.ToTable("Familyinsects");
                });

            modelBuilder.Entity("ArthrpodaASP.Models.Genera", b =>
                {
                    b.Property<int>("GeneraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("GeneraId");

                    b.HasIndex("FamilyId");

                    b.ToTable("Generas");
                });

            modelBuilder.Entity("ArthrpodaASP.Models.InfraOrder", b =>
                {
                    b.Property<int>("InfraOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("InfraOrderId");

                    b.ToTable("InfraOrders");
                });

            modelBuilder.Entity("ArthrpodaASP.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ArthrpodaASP.Models.Family", b =>
                {
                    b.HasOne("ArthrpodaASP.Models.InfraOrder", "InfraOrder")
                        .WithMany()
                        .HasForeignKey("InfraOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArthrpodaASP.Models.Familyinsect", b =>
                {
                    b.HasOne("ArthrpodaASP.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArthrpodaASP.Models.Genera", b =>
                {
                    b.HasOne("ArthrpodaASP.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
